events {}
http {
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream frontend_upstream {
  server frontend:${LOCALHOST_FRONTEND_PORT};
}
upstream taskserver_upstream {
  server taskserver:${LOCALHOST_WEBSOCKET_PORT};  # Assuming taskserver is on the same host
}

server {
    listen ${EXTERNAL_HTTP_PORT};
    server_name ${SERVER_NAME} www.${SERVER_NAME};
    
    # Serve ACME challenge files over HTTP
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen ${EXTERNAL_HTTPS_PORT} ssl;
    server_name ${SERVER_NAME} www.${SERVER_NAME};
    
    client_max_body_size 16M;  # Allows uploads up to 16MB
    
  location / {
      proxy_buffering off;
      proxy_cache off;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_max_temp_file_size 16000m;
      proxy_pass http://frontend_upstream;
  }

  # Additional configuration for WebSocket connections
  location /ws {  # Assuming WebSocket connections are made to /ws
        proxy_pass http://taskserver_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

      # Increase timeouts for long-lived WebSocket connections
      proxy_connect_timeout 120s;  # Allows more time for the WebSocket connection to be established
      proxy_read_timeout 7d;  # Significantly increases the timeout for idle WebSocket connections
      proxy_send_timeout 120s;  # Allows more time for data to be sent to the WebSocket server

      # Optionally, increase buffer sizes for high traffic WebSocket connections
      proxy_buffers 8 32k;  # Adjust the buffer size and number according to your application's needs
      proxy_buffer_size 64k;  # Adjust the buffer size according to your application's needs

      # Disable lingering close to prevent long waits on sockets in closing states
      lingering_close off;

      # Disable proxy buffering for real-time interaction over WebSockets
      proxy_buffering off;
  }
  
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  ssl_certificate /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  location /_next/static {
      proxy_cache STATIC;
      proxy_pass http://frontend_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }


  location /static {
      proxy_cache STATIC;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 60m;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_max_temp_file_size 4096m;
      proxy_pass http://frontend_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }
  
  location /gen {
      proxy_cache STATIC;
      proxy_ignore_headers Cache-Control;
      root /var/public;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }
}
}
